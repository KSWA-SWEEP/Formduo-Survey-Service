server:
  port: ${PORT:2222}

spring:
  profiles:
    active: ${SPRING_PROFILES_ACTIVE:dev}
  application:
    name: ${SERVICE_NAME:survey-service}
  config:
    import: "optional:configserver:http://service-config:8760"
  cloud:
    config: # Ex) `http://service-config/auth/dev`
      name: survey # config name
      profile: ${SPRING_PROFILES_ACTIVE:dev}
  rabbitmq: # RabbitMQ 관련 설정
    host: rabbitmq
    port: 5672
    username: sweep
    password: sweep
  kafka:
    consumer:
      bootstrap-servers:
        - kafka-service:29092
        - kafka-service-1:29093
        - kafka-service-2:29094
      group-id: response
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
    producer:
      bootstrap-servers:
        - kafka-service:29092
        - kafka-service-1:29093
        - kafka-service-2:29094
      key-serializer: org.apache.kafka.common.serialization.StringDeserializer
      value-serializer: org.apache.kafka.common.serialization.StringDeserializer

management:
  endpoints:
    web:
      exposure:
        include: "*"

  metrics:
    distribution:
      percentiles-histogram:
        http:
          server:
            requests: false
      percentiles:
        http:
          server:
            requests: 0.5, 0.9, 0.95, 0.99, 0.999
    tags:
      application: ${spring.application.name}